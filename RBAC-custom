apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: project-visibility-role
rules:
- apiGroups: ["project.openshift.io"]
  resources: ["projects"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "routes", "deployments", "secrets", "builds", "buildconfigs", "imagestreams"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: NOMBRE_DEL_PROYECTO
  name: admin-role-binding
subjects:
- kind: User
  name: NOMBRE_DEL_USUARIO
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: admin-role
  apiGroup: rbac.authorization.k8s.io




oc whoami -t | xargs -I {} oc change-password NOMBRE_DE_USUARIO -p NUEVA_CONTRASEÃ‘A --token={}

oc create secret generic NOMBRE_DEL_USUARIO-pass-secret --from-literal=password=VALOR_BASE64 -n NOMBRE_DEL_PROYECTO

oc edit user NOMBRE_DEL_USUARIO -n NOMBRE_DEL_PROYECTO

apiVersion: user.openshift.io/v1
kind: User
metadata:
  name: NOMBRE_DEL_USUARIO
  annotations:
    user.openshift.io/desired-identity: htpass


		apiVersion: v1
		kind: Role
		metadata:
		  name: Nombre del ROL
		rules:
		- apiGroups: null
		  attributeRestrictions: null
		  resources:
		  - pods
		  - projects
		  - builds
		  verbs:
		  - get
		  - list	
		  - create
		  - update
		  - delete
		  - watch
